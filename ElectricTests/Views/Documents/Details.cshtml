@using System.Web.Script.Serialization
@model FormattedDocument
@Scripts.Render("~/Scripts/jquery-1.7.1.js")
@Scripts.Render("~/Content/javascripts/Paragraph/addQuestion.js")
@Scripts.Render("~/Content/javascripts/foundation.min.js")
<script type="text/javascript"> var paragraphs = @Html.Raw((new JavaScriptSerializer().Serialize(Model.Paragraphs))); </script>
@{
	ViewBag.Title = Model.Title;
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
	<h4>@Model.Title</h4>
	<table width="970">
		<tbody>
			@ShowParagraphs(Model.Paragraphs)
			@helper ShowParagraphs(ICollection<Paragraph> AllParagraphs, string parentParagraphNumber = "") {
				foreach (Paragraph paragraph in AllParagraphs) {
					<tr>
						<td width="50" id="number_@paragraph.Id">@((parentParagraphNumber == "") ?
																		paragraph.Number.ToString() :
																		parentParagraphNumber + "." +
																		paragraph.Number.ToString()).
						</td>
						<td  class="paragraphText">
							<div id="@paragraph.Id">@Html.Raw(paragraph.Text.Replace("\r\n", "<br />"))</div>
							<div class="paragraphMenu" id="menu_@paragraph.Id">
								<a href="#" data-reveal-id="addQuestionForm" onclick=" openForm('@paragraph.Id',
																						'@paragraph.Number'); ">
									<img src="@Url.Content("~/Content/images/icons/add.png")" alt="Add" />
								</a>
							</div>     
						</td>
					</tr>
					if (@paragraph.Paragraphs != null) {
						@ShowParagraphs(paragraph.Paragraphs, (parentParagraphNumber == "") ?
																	paragraph.Number.ToString() :
																	parentParagraphNumber + "." +
																	paragraph.Number.ToString())
					}
				}
			}
		</tbody>
	</table>
</div>
@{ Html.RenderPartial("_AddQuestionForm", new Question {FormattedDocumentId = Model.Id}); }
@{ Html.RenderPartial("_infoMessageWindow",
					  "Jūsų klausimas išsaugotas duomenų bazėje. Po administratoriaus patikrinimo jis bus pridėtas prie testavimo."); }